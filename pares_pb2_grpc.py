# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import pares_pb2 as pares__pb2


class ServidorParesStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.Inserir = channel.unary_unary(
                '/pares.ServidorPares/Inserir',
                request_serializer=pares__pb2.reqI.SerializeToString,
                response_deserializer=pares__pb2.insercao.FromString,
                )
        self.Consulta = channel.unary_unary(
                '/pares.ServidorPares/Consulta',
                request_serializer=pares__pb2.reqC.SerializeToString,
                response_deserializer=pares__pb2.consulta.FromString,
                )
        self.Ativacao = channel.unary_unary(
                '/pares.ServidorPares/Ativacao',
                request_serializer=pares__pb2.reqA.SerializeToString,
                response_deserializer=pares__pb2.cont.FromString,
                )
        self.Terminacao = channel.unary_unary(
                '/pares.ServidorPares/Terminacao',
                request_serializer=pares__pb2.reqT.SerializeToString,
                response_deserializer=pares__pb2.termino.FromString,
                )


class ServidorParesServicer(object):
    """Missing associated documentation comment in .proto file."""

    def Inserir(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Consulta(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Ativacao(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Terminacao(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_ServidorParesServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'Inserir': grpc.unary_unary_rpc_method_handler(
                    servicer.Inserir,
                    request_deserializer=pares__pb2.reqI.FromString,
                    response_serializer=pares__pb2.insercao.SerializeToString,
            ),
            'Consulta': grpc.unary_unary_rpc_method_handler(
                    servicer.Consulta,
                    request_deserializer=pares__pb2.reqC.FromString,
                    response_serializer=pares__pb2.consulta.SerializeToString,
            ),
            'Ativacao': grpc.unary_unary_rpc_method_handler(
                    servicer.Ativacao,
                    request_deserializer=pares__pb2.reqA.FromString,
                    response_serializer=pares__pb2.cont.SerializeToString,
            ),
            'Terminacao': grpc.unary_unary_rpc_method_handler(
                    servicer.Terminacao,
                    request_deserializer=pares__pb2.reqT.FromString,
                    response_serializer=pares__pb2.termino.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'pares.ServidorPares', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class ServidorPares(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def Inserir(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/pares.ServidorPares/Inserir',
            pares__pb2.reqI.SerializeToString,
            pares__pb2.insercao.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Consulta(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/pares.ServidorPares/Consulta',
            pares__pb2.reqC.SerializeToString,
            pares__pb2.consulta.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Ativacao(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/pares.ServidorPares/Ativacao',
            pares__pb2.reqA.SerializeToString,
            pares__pb2.cont.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Terminacao(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/pares.ServidorPares/Terminacao',
            pares__pb2.reqT.SerializeToString,
            pares__pb2.termino.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)


class ServidorCentralStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.Registro = channel.unary_unary(
                '/pares.ServidorCentral/Registro',
                request_serializer=pares__pb2.reqR.SerializeToString,
                response_deserializer=pares__pb2.cont.FromString,
                )
        self.Mapa = channel.unary_unary(
                '/pares.ServidorCentral/Mapa',
                request_serializer=pares__pb2.reqC.SerializeToString,
                response_deserializer=pares__pb2.mapa.FromString,
                )
        self.Terminacao = channel.unary_unary(
                '/pares.ServidorCentral/Terminacao',
                request_serializer=pares__pb2.reqT.SerializeToString,
                response_deserializer=pares__pb2.termino.FromString,
                )


class ServidorCentralServicer(object):
    """Missing associated documentation comment in .proto file."""

    def Registro(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Mapa(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Terminacao(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_ServidorCentralServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'Registro': grpc.unary_unary_rpc_method_handler(
                    servicer.Registro,
                    request_deserializer=pares__pb2.reqR.FromString,
                    response_serializer=pares__pb2.cont.SerializeToString,
            ),
            'Mapa': grpc.unary_unary_rpc_method_handler(
                    servicer.Mapa,
                    request_deserializer=pares__pb2.reqC.FromString,
                    response_serializer=pares__pb2.mapa.SerializeToString,
            ),
            'Terminacao': grpc.unary_unary_rpc_method_handler(
                    servicer.Terminacao,
                    request_deserializer=pares__pb2.reqT.FromString,
                    response_serializer=pares__pb2.termino.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'pares.ServidorCentral', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class ServidorCentral(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def Registro(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/pares.ServidorCentral/Registro',
            pares__pb2.reqR.SerializeToString,
            pares__pb2.cont.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Mapa(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/pares.ServidorCentral/Mapa',
            pares__pb2.reqC.SerializeToString,
            pares__pb2.mapa.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Terminacao(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/pares.ServidorCentral/Terminacao',
            pares__pb2.reqT.SerializeToString,
            pares__pb2.termino.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
